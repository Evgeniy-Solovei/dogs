# Generated by Django 5.1.4 on 2024-12-28 00:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.PositiveBigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя игрока')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации игрока')),
                ('coins', models.PositiveBigIntegerField(default=0, verbose_name='Текущие монеты игрока')),
                ('coins_spent_today', models.PositiveBigIntegerField(default=0, verbose_name='Потраченные монеты за текущий день')),
                ('daily_bonus_friends', models.IntegerField(default=0, verbose_name='Бонус от рефералов за текущий день')),
                ('consecutive_days', models.IntegerField(default=0, verbose_name='Количество дней входов подряд')),
                ('last_login_date', models.DateField(blank=True, null=True, verbose_name='Последний вход для расчёта дней подряд')),
                ('offline_coins', models.IntegerField(default=0, verbose_name='Офлайн бонусы 1 раз в 3 часа')),
                ('start_offline_coins', models.DateTimeField(blank=True, null=True, verbose_name='Время начала офлайн бонусов')),
                ('finish_offline_coins', models.DateTimeField(blank=True, null=True, verbose_name='Время окончания офлайн бонусов')),
                ('coins_in_second', models.IntegerField(default=0, verbose_name='Заработок монет в секунду')),
                ('finish_second_coins', models.DateTimeField(blank=True, null=True, verbose_name='Время последнего сбора бонуса')),
                ('lvl', models.IntegerField(default=1, verbose_name='Уровень игрока')),
                ('daily_bonus', models.BooleanField(default=True, verbose_name='Выдача ежедневного бонуса')),
                ('instruction', models.BooleanField(default=True, verbose_name='Показ инструкции')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='Имя собаки')),
                ('lvl', models.IntegerField(default=1, verbose_name='Уровень собаки')),
                ('price', models.IntegerField(default=100, verbose_name='Цена создания собаки')),
                ('percent_up_price', models.FloatField(default=7.0, verbose_name='Процент увеличения цены')),
                ('bonus_second', models.IntegerField(default=3, verbose_name='Бонус в секунду за создание собаки')),
                ('bonus_connection', models.IntegerField(default=0, verbose_name='Бонус в секунду за cкрещивание собак')),
                ('dog_field', models.IntegerField(blank=True, null=True, verbose_name='Место на игровом поле')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная собака')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dogs', to='app_core.player', verbose_name='Игрок')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_bonus', models.BooleanField(default=True, verbose_name='Бонус для реферала')),
                ('new_player_bonus', models.BooleanField(default=True, verbose_name='Бонус для нового игрока')),
                ('new_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_person', to='app_core.player', verbose_name='Новый игрок')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral', to='app_core.player', verbose_name='Реферал')),
            ],
            options={
                'verbose_name': 'Реферальная система',
                'verbose_name_plural': 'Реферальная системы',
            },
        ),
    ]
